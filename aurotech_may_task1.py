# -*- coding: utf-8 -*-
"""AuroTech_MAY_Task1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hvfh2TXR9Z2UkjVUer_o2MscoOxXg2Cb
"""

import time

class BankAccount:
    def __init__(self, user_id, pin):
        self.user_id = user_id
        self.pin = pin
        self.transactions = []

    def authenticate(self, user_id, pin):
        if user_id == self.user_id and pin == self.pin:
            return True
        return False

    def deposit(self, amount):
        self.transactions.append(f'Deposit of {amount}')

    def withdraw(self, amount):
        self.transactions.append(f'Withdrawal of {amount}')

    def transfer(self, amount, to_account):
        self.transactions.append(f'Transfer of {amount} to {to_account.user_id}')
        to_account.deposit(amount)

    def display_transactions(self):
        for transaction in self.transactions:
            print(transaction)


class ATM:
    def __init__(self):
        self.accounts = {
            12345: BankAccount(12345, 6789),
            98765: BankAccount(98765, 1357)
        }

    def start(self):
        user_id = int(input('Enter your user ID: '))
        pin = int(input('Enter your PIN: '))

        if user_id in self.accounts:
            if self.accounts[user_id].authenticate(user_id, pin):
                self.welcome(self.accounts[user_id])
            else:
                print('Incorrect user ID or PIN.')
        else:
            print('User ID not found.')

    def welcome(self, account):
        print('Welcome to the ATM!')
        while True:
            print('1. Transactions History')
            print('2. Withdraw')
            print('3. Deposit')
            print('4. Transfer')
            print('5. Logout')

            option = int(input('Choose an option: '))

            if option == 1:
                account.display_transactions()
            elif option == 2:
                amount = float(input('Enter the amount to withdraw: '))
                account.withdraw(amount)
            elif option == 3:
                amount = float(input('Enter the amount to deposit: '))
                account.deposit(amount)
            elif option == 4:
                to_user_id = int(input('Enter the user ID to transfer to: '))
                if to_user_id in self.accounts:
                    amount = float(input('Enter the amount to transfer: '))
                    self.accounts[to_user_id].deposit(amount)
                    account.transfer(amount, self.accounts[to_user_id])
                else:
                    print('User ID not found.')
            elif option == 5:
                print('Goodbye!')
                break
            else:
                print('Invalid option.')


if __name__ == '__main__':
    atm = ATM()
    atm.start()

